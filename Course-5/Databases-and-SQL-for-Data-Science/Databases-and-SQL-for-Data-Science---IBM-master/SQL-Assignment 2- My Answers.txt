------------------------------------------
--DDL statement for table 'HR' database--
--------------------------------------------

CREATE TABLE EMPLOYEES (
                            EMP_ID CHAR(9) NOT NULL, 
                            F_NAME VARCHAR(15) NOT NULL,
                            L_NAME VARCHAR(15) NOT NULL,
                            SSN CHAR(9),
                            B_DATE DATE,
                            SEX CHAR,
                            ADDRESS VARCHAR(30),
                            JOB_ID CHAR(9),
                            SALARY DECIMAL(10,2),
                            MANAGER_ID CHAR(9),
                            DEP_ID CHAR(9) NOT NULL,
                            PRIMARY KEY (EMP_ID));
                            
  CREATE TABLE JOB_HISTORY (
                            EMPL_ID CHAR(9) NOT NULL, 
                            START_DATE DATE,
                            JOBS_ID CHAR(9) NOT NULL,
                            DEPT_ID CHAR(9),
                            PRIMARY KEY (EMPL_ID,JOBS_ID));
 
 CREATE TABLE JOBS (
                            JOB_IDENT CHAR(9) NOT NULL, 
                            JOB_TITLE VARCHAR(15) ,
                            MIN_SALARY DECIMAL(10,2),
                            MAX_SALARY DECIMAL(10,2),
                            PRIMARY KEY (JOB_IDENT));

CREATE TABLE DEPARTMENTS (
                            DEPT_ID_DEP CHAR(9) NOT NULL, 
                            DEP_NAME VARCHAR(15) ,
                            MANAGER_ID CHAR(9),
                            LOC_ID CHAR(9),
                            PRIMARY KEY (DEPT_ID_DEP));

CREATE TABLE LOCATIONS (
                            LOCT_ID CHAR(9) NOT NULL,
                            DEP_ID_LOC CHAR(9) NOT NULL,
                            PRIMARY KEY (LOCT_ID,DEP_ID_LOC));
                            
                            
                            
SELECT * 
FROM LOCATIONS

SELECT * 
FROM  EMPLOYEES

--Query 1: Retrieve all employees whose address is in Elgin,IL
--[Hint: Use the LIKE operator to find similar strings] 
SELECT *
FROM  EMPLOYEES
WHERE  ADDRESS  LIKE '%Elgin,IL'

--Query 2: Retrieve all employees who were born during the 1970's.
--[Hint: Use the LIKE operator to find similar strings] 
SELECT * 
FROM EMPLOYEES
WHERE B_DATE LIKE '197%'

--Query 3: Retrieve all employees in department 5 whose salary is between
--60000 and 70000 .
--[Hint: Use the keyword BETWEEN for this query ]
SELECT *
FROM  EMPLOYEES
WHERE (DEP_ID = 5) AND (SALARY BETWEEN 60000 AND 70000)

--Query 4A: Retrieve a list of employees ordered by department ID.
--[Hint: Use the ORDER BY clause for this query] 
SELECT *
FROM EMPLOYEES
ORDER BY DEP_ID

--Query 4B: Retrieve a list of employees ordered in descending order by
--department ID and within each department ordered alphabetically in
--descending order by last name.
SELECT * 
FROM EMPLOYEES 
ORDER BY DEP_ID DESC, L_NAME DESC

--Query 5A: For each department ID retrieve the number of employees in the
--department.
--[Hint: Use COUNT(*) to retrieve the total count of a column, and then GROUP BY]
SELECT DEP_ID, COUNT(*) AS TOT_EMP
FROM EMPLOYEES
GROUP BY DEP_ID

--Query 5B: For each department retrieve the number of employees in the
--department, and the average employees salary in the department.
--[Hint: Use COUNT(*) to retrieve the total count of a column, and AVG() function to
--compute average salaries, and then group]
SELECT DEP_ID, AVG(SALARY) AS AVG_SAL, COUNT(*) AS TOT_EMP
FROM EMPLOYEES
GROUP BY DEP_ID

--Query 5C: Label the computed columns in the result set of Query 5B as
--“NUM_EMPLOYEES” and “AVG_SALARY”.
--[Hint: Use AS “LABEL_NAME” after the column name]
SELECT DEP_ID, AVG(SALARY) AS AVG_SALALARY, COUNT(*) AS NUM_EMPLOYEES
FROM EMPLOYEES
GROUP BY DEP_ID

--Query 5D: In Query 5C order the result set by Average Salary.
--[Hint: Use ORDER BY after the GROUP BY]
SELECT DEP_ID, AVG(SALARY) AS AVG_SALALARY, COUNT(*) AS NUM_EMPLOYEES
FROM EMPLOYEES
GROUP BY DEP_ID
ORDER BY AVG_SALALARY

--Query 5E: In Query 5D limit the result to departments with fewer than 4
--employees.
--[Hint: Use HAVING after the GROUP BY, and use the count() function in the
--HAVING clause instead of the column label.
--Note: WHERE clause is used for filtering the entire result set whereas the HAVING
--clause is used for filtering the result of the grouping]
SELECT DEP_ID, AVG(SALARY) AS AVG_SALALARY, COUNT(*) AS NUM_EMPLOYEES
FROM EMPLOYEES
GROUP BY DEP_ID HAVING  COUNT(*) < 4
ORDER BY AVG_SALALARY

--BONUS Query 6: Similar to 4B but instead of department ID use department
--name. Retrieve a list of employees ordered by department name, and within
--each department ordered alphabetically in descending order by last name.
--[Hint: Department name is in the DEPARTMENTS table. So your query will need to
--retrieve data from more than one table. Don’t worry if you are not able to figure this
--one out … we’ll cover working with multiple tables in the next lesson.]  
SELECT D.DEP_NAME, E.F_NAME, E.L_NAME
FROM EMPLOYEES AS E
LEFT JOIN DEPARTMENTS AS D
ON  E.DEP_ID = D.DEPT_ID_DEP
ORDER BY DEP_NAME, L_NAME DESC
                            